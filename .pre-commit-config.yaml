# Pre-commit hooks configuration for VibesPro
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

default_install_hook_types: [pre-commit, commit-msg]

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        exclude: ^(.*\.md|.*\.j2)$
      - id: end-of-file-fixer
        exclude: ^(.*\.j2|tests/fixtures/.*)$
      - id: check-yaml
        exclude: ^(.*\.j2|\.github/copilot-instructions\.md)$
      - id: check-json
        exclude: ^(.*\.j2|tsconfig\..*\.json|templates/.*|apps/\{\{app_name\}\}/.*|libs/\{\{domain_name\}\}/.*)$
      - id: check-toml
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ["--maxkb=1000"]
      - id: check-case-conflict
      - id: mixed-line-ending
        args: ["--fix=lf"]
      - id: detect-private-key
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
        exclude: ^.*\.rs$

  # Python linting and formatting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.8.4
    hooks:
      # Run the linter
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        exclude: ^(.*\.j2|tests/fixtures/.*|libs/prompt_optimizer/.*)$
      # Run the formatter
      - id: ruff-format
        exclude: ^(.*\.j2|tests/fixtures/.*)$

  # Python type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.14.0
    hooks:
      - id: mypy
        additional_dependencies: [types-PyYAML, types-requests]
        # Exclude generated/template directories and known hyphenated-package
        # locations so pre-commit mypy doesn't flag artifacts that are intentionally
        # unnormalized or templated. Keep checks strict for committed files.
        exclude: '(^.*\.j2$|^tests/fixtures/.*|^templates/.*|^tmp/copier-inspect/.*|^tmp/copier-inspect-noai/.*|^hooks/.*|^apps/.*|^docs/knowledgebase/archive/.*|^docs/update/.*|^libs/prompt_optimizer/.*|^templates/tools/prompt_optimizer/.*|^tools/temporal-db/.*|^tools/temporal_db/.*|.*\{\{.*\}\}.*)$'
        args:
          - --strict
          - --python-version=3.12
          - "--ignore-missing-imports"
          - .
        # Let mypy do its own discovery so the `exclude` regex in pyproject.toml
        # is honored (this prevents pre-commit from passing test/template files
        # explicitly which would bypass the exclude patterns).
        pass_filenames: false

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.43.0
    hooks:
      - id: markdownlint
        args: ["--config", ".markdownlint.json", "--fix"]
        exclude: ^(docs/knowledgebase/archive/.*|docs/update/.*|docs/wiki/.*)$

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        args: ["-S", "style", "-o", "all"]
        # ShellCheck on templates and test fixtures produces many style warnings for
        # intentionally templated scripts. Ignore templates and some test fixtures.
        exclude: ^(.*\.j2|tests/fixtures/|tests/cli/|tests/env/.*|templates/.*|apps/\{\{app_name\}\}/.*|tests/ops/.*)$

  # TypeScript/JavaScript linting (using local eslint)
  - repo: local
    hooks:
      - id: eslint
        name: eslint (pre-commit safe)
        # Use a temporary, minimal config during pre-commit lint runs to avoid loading
        # per-app configs that require a full front-end dependency install.
        entry: bash -c 'if command -v pnpm >/dev/null 2>&1; then pnpm exec eslint --config .eslintrc.precommit.cjs --fix "$@"; else npx eslint --config .eslintrc.precommit.cjs --fix "$@"; fi' --
        language: system
        types_or: [javascript, jsx, ts, tsx]
        # Temporarily exclude the generated app template folder that extends Next.
        # This avoids a fatal config loading error while we align ESLint and shared configs.
        exclude: ^(node_modules/|\.nx/|dist/|coverage/|.*\.j2|tests/fixtures/|tools/reference/|apps/\{\{app_name\}}/)
        require_serial: false

  # AGENTS.md and documentation link checking
  - repo: local
    hooks:
      - id: check-agent-links
        name: Check AGENTS.md links
        entry: node
        args: [tools/docs/link_check.js]
        language: system
        files: ^AGENTS\.md$
        pass_filenames: false

  # Prompt file linting (custom validation)
  - repo: local
    hooks:
      - id: prompt-lint
        name: Lint prompt files
        entry: node
        args: [tools/prompt/lint.js]
        language: system
        files: ^\.github/prompts/.*\.prompt\.md$

  # Specification matrix validation
  - repo: local
    hooks:
      - id: spec-matrix
        name: Validate spec matrix
        entry: node
        args: [tools/spec/matrix.js]
        language: system
        files: ^(docs/.*\.md|\.github/instructions/.*\.md)$
        pass_filenames: false

# Configuration
fail_fast: false
minimum_pre_commit_version: "2.15.0"

# CI skip tags
ci:
  skip: []
