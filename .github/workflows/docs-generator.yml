name: Docs generator CI
permissions:
  contents: read

on:
  push:
    branches: [main, feature/**]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      run_conversion:
        description: "Run pandoc conversion tests (html/docx/epub)"
        required: false
        default: "false"

concurrency:
  group: docs-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-docs-generator:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python: [3.12]
        node: [22]

    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml

      - name: Enable Corepack
        run: corepack enable

      - name: Prepare pnpm 9.0.0
        run: corepack prepare pnpm@9.0.0 --activate

      - name: Set up Python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: ${{ matrix.python }}

      - name: Install uv
        uses: astral-sh/setup-uv@6dfebec6ddbcd197e02256fbdf54deb334fb7f06 # v2

      - name: Install Node deps
        run: pnpm install --frozen-lockfile

      - name: Install Python deps
        run: uv sync --group dev --all-extras --frozen

      - name: Run docs generator integration test
        run: uv run python -m pytest -q tests/test_docs_generator_integration.py

      - name: Run generator and validate output
        run: uv run python tools/docs/generator.py --project-name ci-test --output-dir tmpdocs --validate

      # Conversion tests run in a separate job (conversion-tests) which installs a pinned pandoc

      - name: Upload tmpdocs artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: tmpdocs
          path: tmpdocs

  conversion-tests:
    # Run conversion tests in a separate job, pinned to a known pandoc release
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' && github.event.inputs.run_conversion == 'true'
    runs-on: ubuntu-latest
    needs: test-docs-generator

    strategy:
      matrix:
        python: [3.12]
        node: [22]

    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml

      - name: Enable Corepack
        run: corepack enable

      - name: Prepare pnpm 9.0.0
        run: corepack prepare pnpm@9.0.0 --activate

      - name: Set up Python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: ${{ matrix.python }}

      - name: Install uv
        uses: astral-sh/setup-uv@6dfebec6ddbcd197e02256fbdf54deb334fb7f06 # v2

      - name: Install Node deps
        run: pnpm install --frozen-lockfile

      - name: Download and install pinned pandoc (3.8 linux-amd64)
        run: |
          set -euo pipefail
          PANDOC_URL=https://github.com/jgm/pandoc/releases/download/3.8/pandoc-3.8-linux-amd64.tar.gz
          curl -L "$PANDOC_URL" -o /tmp/pandoc.tar.gz
          mkdir -p /tmp/pandoc && tar -xzf /tmp/pandoc.tar.gz -C /tmp/pandoc --strip-components=1
          sudo cp /tmp/pandoc/bin/pandoc /usr/local/bin/
          sudo chmod +x /usr/local/bin/pandoc
          pandoc --version

      - name: Install Python deps
        run: uv sync --group dev --all-extras --frozen

      - name: Run conversion test (html)
        run: |
          rm -rf tmpdocs-html || true
          uv run python tools/docs/generator.py --project-name ci-test --output-dir tmpdocs-html --format html --validate
          if [ ! -f tmpdocs-html/README.html ]; then
            echo "ERROR: README.html not produced"
            ls -la tmpdocs-html
            exit 2
          fi

      - name: Upload tmpdocs-html artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: tmpdocs-html
          path: tmpdocs-html
