# Integration Tests Workflow
# MERGE-TASK-010: Integration Testing Suite
# Automated testing pipeline for the HexDDD-VibePDK merger
#
# Test matrix for different project configurations:
# - Architecture styles: hexagonal, layered, microservices
# - AI workflows: enabled/disabled
# - Framework targets: next, remix, expo
# - Performance profiles: baseline, AI-augmented

name: Integration Tests
permissions:
  contents: read

on:
  push:
    branches: [main, develop, "feature/phase-5"]
  pull_request:
    branches: [main, develop]

concurrency:
  group: integration-${{ github.ref }}
  cancel-in-progress: true

jobs:
  project-generation:
    name: Project Generation Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [hexagonal, layered, microservices]
        ai_enabled: [true, false]
        framework: [next, remix, expo]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup pnpm
       - name: Setup pnpm
         uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
         with:
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Set up Python
<<<<<<< HEAD
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
=======
        uses: actions/setup-python@v5
>>>>>>> 37cf339 (Enhance CI workflows: add concurrency settings, update Node.js and Python versions, and streamline dependency installation)
        with:
          python-version: "3.12"

      - name: Install uv
<<<<<<< HEAD
        uses: astral-sh/setup-uv@6dfebec6ddbcd197e02256fbdf54deb334fb7f06 # v2
=======
        uses: astral-sh/setup-uv@v2
>>>>>>> 37cf339 (Enhance CI workflows: add concurrency settings, update Node.js and Python versions, and streamline dependency installation)

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Copier
        run: uv tool install copier

      - name: Run project generation tests
        run: pnpm test:integration tests/integration/project-generation.test.ts
        env:
          TEST_ARCHITECTURE: ${{ matrix.architecture }}
          TEST_AI_ENABLED: ${{ matrix.ai_enabled }}
          TEST_FRAMEWORK: ${{ matrix.framework }}

  end-to-end:
    name: End-to-End Integration
    runs-on: ubuntu-latest
    needs: project-generation

    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup pnpm
        uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Set up Python
<<<<<<< HEAD
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
=======
        uses: actions/setup-python@v5
>>>>>>> 37cf339 (Enhance CI workflows: add concurrency settings, update Node.js and Python versions, and streamline dependency installation)
        with:
          python-version: "3.12"

      - name: Install uv
<<<<<<< HEAD
        uses: astral-sh/setup-uv@6dfebec6ddbcd197e02256fbdf54deb334fb7f06 # v2
=======
        uses: astral-sh/setup-uv@v2
>>>>>>> 37cf339 (Enhance CI workflows: add concurrency settings, update Node.js and Python versions, and streamline dependency installation)

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install system dependencies
        run: |
          uv tool install copier
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source ~/.cargo/env

      - name: Run end-to-end tests
        run: pnpm test:integration tests/integration/end-to-end.test.ts
        timeout-minutes: 15

  performance-benchmarks:
    name: Performance Benchmarks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup pnpm
<<<<<<< HEAD
        uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
=======
        uses: pnpm/action-setup@v3
>>>>>>> 37cf339 (Enhance CI workflows: add concurrency settings, update Node.js and Python versions, and streamline dependency installation)
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Set up Python
<<<<<<< HEAD
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
=======
        uses: actions/setup-python@v5
>>>>>>> 37cf339 (Enhance CI workflows: add concurrency settings, update Node.js and Python versions, and streamline dependency installation)
        with:
          python-version: "3.12"

      - name: Install uv
<<<<<<< HEAD
        uses: astral-sh/setup-uv@6dfebec6ddbcd197e02256fbdf54deb334fb7f06 # v2
=======
        uses: astral-sh/setup-uv@v2
>>>>>>> 37cf339 (Enhance CI workflows: add concurrency settings, update Node.js and Python versions, and streamline dependency installation)

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile
          uv tool install copier

      - name: Run performance tests
        run: pnpm test:integration tests/integration/performance.test.ts
        timeout-minutes: 10

      - name: Upload performance results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: performance-results
          path: performance-results.json

  ai-workflows:
    name: AI Workflows Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup pnpm
<<<<<<< HEAD
        uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
=======
        uses: pnpm/action-setup@v3
>>>>>>> 37cf339 (Enhance CI workflows: add concurrency settings, update Node.js and Python versions, and streamline dependency installation)
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Set up Python
<<<<<<< HEAD
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
=======
        uses: actions/setup-python@v5
>>>>>>> 37cf339 (Enhance CI workflows: add concurrency settings, update Node.js and Python versions, and streamline dependency installation)
        with:
          python-version: "3.12"

      - name: Install uv
<<<<<<< HEAD
        uses: astral-sh/setup-uv@6dfebec6ddbcd197e02256fbdf54deb334fb7f06 # v2
=======
        uses: astral-sh/setup-uv@v2
>>>>>>> 37cf339 (Enhance CI workflows: add concurrency settings, update Node.js and Python versions, and streamline dependency installation)

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile
          uv tool install copier

      - name: Run AI workflow tests
        run: pnpm test:integration tests/integration/ai-workflows.test.ts

  integration-summary:
    name: Integration Test Summary
    runs-on: ubuntu-latest
    needs:
      [project-generation, end-to-end, performance-benchmarks, ai-workflows]
    if: always()

    steps:
      - name: Check test results
        run: |
          echo "Project Generation: ${{ needs['project-generation'].result }}"
          echo "End-to-End: ${{ needs['end-to-end'].result }}"
          echo "Performance Benchmarks: ${{ needs['performance-benchmarks'].result }}"
          echo "AI Workflows: ${{ needs['ai-workflows'].result }}"

          if [[ "${{ needs['project-generation'].result }}" == "success" &&
                "${{ needs['end-to-end'].result }}" == "success" &&
                "${{ needs['performance-benchmarks'].result }}" == "success" &&
                "${{ needs['ai-workflows'].result }}" == "success" ]]; then
            echo "✅ All integration tests passed!"
            exit 0
          else
            echo "❌ Some integration tests failed"
            exit 1
          fi
