# Integration Tests Workflow
# MERGE-TASK-010: Integration Testing Suite
# Automated testing pipeline for the HexDDD-VibePDK merger
#
# Test matrix for different project configurations:
# - Architecture styles: hexagonal, layered, microservices
# - AI workflows: enabled/disabled
# - Framework targets: next, remix, expo
# - Migration scenarios: HexDDD, VibePDK

name: Integration Tests
permissions:
  contents: read

on:
  push:
    branches: [main, develop, "feature/phase-5"]
  pull_request:
    branches: [main, develop]

jobs:
  project-generation:
    name: Project Generation Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
      architecture: [hexagonal, layered, microservices]
      ai_enabled: [true, false]
      framework: [next, remix, expo]

    steps:
      - name: Checkout repository
      uses: actions/checkout@0123456789abcdef0123456789abcdef01234567

      - name: Setup Node.js
      uses: actions/setup-node@1111111111111111111111111111111111111111
      with:
        node-version: "18"
        cache: "pnpm"

      - name: Setup Python
      uses: actions/setup-python@2222222222222222222222222222222222222222
      with:
        python-version: "3.11"

      - name: Install pnpm
      uses: pnpm/action-setup@3333333333333333333333333333333333333333
      with:
        version: 8

      - name: Install dependencies
      run: pnpm install

      - name: Install Copier
      run: pip install copier

      - name: Run project generation tests
      run: pnpm test:integration tests/integration/project-generation.test.ts
      env:
        TEST_ARCHITECTURE: ${{ matrix.architecture }}
        TEST_AI_ENABLED: ${{ matrix.ai_enabled }}
        TEST_FRAMEWORK: ${{ matrix.framework }}
          TEST_ARCHITECTURE: ${{ matrix.architecture }}
          TEST_AI_ENABLED: ${{ matrix.ai_enabled }}
          TEST_FRAMEWORK: ${{ matrix.framework }}

  end-to-end:
    name: End-to-End Integration
    runs-on: ubuntu-latest
    needs: project-generation

    steps:
      - name: Checkout repository
        uses: actions/checkout@a1b2c3d4e5f60123456789abcdef0123456789ab

      - name: Setup Node.js
        uses: actions/setup-node@b2c3d4e5f60123456789abcdef0123456789abcd
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Setup Python
        uses: actions/setup-python@c3d4e5f60123456789abcdef0123456789abcde1
        with:
          python-version: "3.11"

      - name: Install pnpm
        uses: pnpm/action-setup@d4e5f60123456789abcdef0123456789abcdef12
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Install system dependencies
        run: |
          pip install copier uv
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source ~/.cargo/env

      - name: Run end-to-end tests
        run: pnpm test:integration tests/integration/end-to-end.test.ts
        timeout-minutes: 15

  migration-validation:
    name: Migration Tools Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@a1b2c3d4e5f60123456789abcdef0123456789ab

      - name: Setup Python
        uses: actions/setup-python@c3d4e5f60123456789abcdef0123456789abcde1
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install copier uv
          pip install -e .

      - name: Test HexDDD migration
        run: python -m pytest tests/migration/test_hexddd_migration.py -v

      - name: Test VibePDK migration
        run: python -m pytest tests/migration/ -k vibepdk -v

      - name: Run migration integration tests
        run: pnpm test:integration tests/integration/migration-tools.test.ts

  performance-benchmarks:
    name: Performance Benchmarks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@a1b2c3d4e5f60123456789abcdef0123456789ab

      - name: Setup Node.js
        uses: actions/setup-node@b2c3d4e5f60123456789abcdef0123456789abcd
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Setup Python
        uses: actions/setup-python@c3d4e5f60123456789abcdef0123456789abcde1
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pnpm install
          pip install copier

      - name: Run performance tests
        run: pnpm test:integration tests/integration/performance.test.ts
        timeout-minutes: 10

      - name: Upload performance results
        uses: actions/upload-artifact@4444444444444444444444444444444444444444
        if: always()
        with:
          name: performance-results
          path: performance-results.json

  ai-workflows:
    name: AI Workflows Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@a1b2c3d4e5f60123456789abcdef0123456789ab

      - name: Setup Node.js
        uses: actions/setup-node@b2c3d4e5f60123456789abcdef0123456789abcd
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Setup Python
        uses: actions/setup-python@c3d4e5f60123456789abcdef0123456789abcde1
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pnpm install
          pip install copier

      - name: Run AI workflow tests
        run: pnpm test:integration tests/integration/ai-workflows.test.ts

  integration-summary:
    name: Integration Test Summary
    runs-on: ubuntu-latest
    needs:
      [
        project-generation,
        end-to-end,
        migration-validation,
        performance-benchmarks,
        ai-workflows,
      ]
    if: always()

    steps:
      - name: Check test results
        run: |
          echo "Project Generation: ${{ needs.project-generation.result }}"
          echo "End-to-End: ${{ needs.end-to-end.result }}"
          echo "Migration Validation: ${{ needs.migration-validation.result }}"
          echo "Performance Benchmarks: ${{ needs.performance-benchmarks.result }}"
          echo "AI Workflows: ${{ needs.ai-workflows.result }}"

          if [[ "${{ needs.project-generation.result }}" == "success" &&
                "${{ needs.end-to-end.result }}" == "success" &&
                "${{ needs.migration-validation.result }}" == "success" &&
                "${{ needs.performance-benchmarks.result }}" == "success" &&
                "${{ needs.ai-workflows.result }}" == "success" ]]; then
            echo "✅ All integration tests passed!"
            exit 0
          else
            echo "❌ Some integration tests failed"
            exit 1
          fi
