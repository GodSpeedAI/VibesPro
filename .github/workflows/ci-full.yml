name: CI - build & test (with SOPS)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    env:
      IS_FORK: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository }}
      SOPS_LOADED: "false"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install sops
        run: |
          set -euo pipefail
          SOPS_VERSION="3.9.3"
          SOPS_FILE="sops-v${SOPS_VERSION}.linux.amd64"
          curl -LO "https://github.com/getsops/sops/releases/download/v${SOPS_VERSION}/${SOPS_FILE}"
          sudo mv "${SOPS_FILE}" /usr/local/bin/sops
          sudo chmod +x /usr/local/bin/sops
          sops --version

      - name: Configure age key (skip gracefully if not set)
        if: ${{ env.IS_FORK != 'true' }}
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
        run: |
          # Don't fail the job if the secret isn't available (PRs/forks). Mark SOPS_LOADED in the env.
          if [ -z "${SOPS_AGE_KEY:-}" ]; then
            echo "SOPS_AGE_KEY is not set; skipping decrypt for this run (no repo secret available)"
            echo "SOPS_LOADED=false" >> $GITHUB_ENV
          else
            mkdir -p ~/.config/sops
            printf "%s" "${SOPS_AGE_KEY}" > ~/.config/sops/age-key.txt
            chmod 600 ~/.config/sops/age-key.txt
            echo "SOPS_AGE_KEY_FILE=~/.config/sops/age-key.txt" >> $GITHUB_ENV
            echo "SOPS_LOADED=true" >> $GITHUB_ENV
          fi

      - name: Decrypt secrets
        if: ${{ env.SOPS_LOADED == 'true' }}
        run: |
          set -euo pipefail
          sops --input-type dotenv --output-type dotenv -d .secrets.env.sops > .secrets.env
          chmod 600 .secrets.env

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Enable corepack (pnpm)
        run: |
          corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm run lint

      - name: Build
        run: pnpm run build

      - name: Run tests
        run: |
          # If decrypted secrets file exists, load it into the environment for tests.
          if [ -f .secrets.env ]; then
            set -a
            # shellcheck disable=SC1090
            source .secrets.env
            set +a
          else
            echo "No decrypted secrets found; running tests without them"
          fi
          pnpm run test

      - name: Cleanup decrypted secrets
        if: always()
        run: shred -u .secrets.env || rm -f .secrets.env
