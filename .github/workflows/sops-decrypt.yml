name: Decrypt secrets and test

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install sops
        run: |
          # Install sops by downloading the official release binary (works on Ubuntu runners)
          set -euo pipefail
          SOPS_VERSION="3.9.3"
          SOPS_FILE="sops-v${SOPS_VERSION}.linux.amd64"
          curl -LO "https://github.com/getsops/sops/releases/download/v${SOPS_VERSION}/${SOPS_FILE}"
          sudo mv "${SOPS_FILE}" /usr/local/bin/sops
          sudo chmod +x /usr/local/bin/sops
          sops --version

      - name: Configure age key (skip if not set)
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
        run: |
          # If the repository secret isn't available (e.g., PR from fork), skip decrypt
          if [ -z "${SOPS_AGE_KEY:-}" ]; then
            echo "SOPS_AGE_KEY is not set; skipping decrypt (no secret available for this run)"
            exit 0
          fi
          mkdir -p ~/.config/sops
          printf "%s" "${SOPS_AGE_KEY}" > ~/.config/sops/age-key.txt
          chmod 600 ~/.config/sops/age-key.txt
          # Expose the path for subsequent steps
          echo "SOPS_AGE_KEY_FILE=~/.config/sops/age-key.txt" >> $GITHUB_ENV

      - name: Decrypt secrets
        if: ${{ secrets.SOPS_AGE_KEY != '' }}
        run: |
          set -euo pipefail
          sops -d .secrets.env.sops > .secrets.env
          chmod 600 .secrets.env

      - name: Run tests
        env:
          # load minimal variables from .secrets.env if needed by tests
          # Example: OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # avoid echoing secrets
          # run your test/build commands here
          echo "(secrets decrypted)"

      - name: Cleanup
        if: always()
        run: shred -u .secrets.env || rm -f .secrets.env
