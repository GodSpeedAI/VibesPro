name: Generation smoke tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
      - phase-2

jobs:
  smoke-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9.0.0 --activate

      - name: Install copier
        run: |
          python -m pip install --upgrade pip
          pip install copier

      - name: Render template to temporary dir
        run: |
          TARGET_DIR=$(mktemp -d)
          echo "Rendering into $TARGET_DIR"
          copier copy ./templates/{{project_slug}} $TARGET_DIR --data-file tests/fixtures/test-data.yml --force
          echo "Rendered files:" && ls -la $TARGET_DIR | sed -n '1,120p'

      - name: Install generated project dependencies
        working-directory: ${{ runner.temp }}
        run: |
          # Copier rendered project path is printed above; use a heuristic to find it
          # The template writes project files directly into $TARGET_DIR. We'll reuse the path.
          # Find the rendered directory (first directory inside temp)
          RENDERED=$(find /tmp -maxdepth 2 -type d -name "*" -print | head -n 1)
          echo "Attempting to install in: $RENDERED"
          cd "$RENDERED" || exit 1
          pnpm install --frozen-lockfile || pnpm install

      - name: Build + Typecheck generated project
        run: |
          RENDERED=$(find /tmp -maxdepth 2 -type d -name "*" -print | head -n 1)
          cd "$RENDERED" || exit 1
          pnpm run -w build --if-present || true
          pnpm run -w typecheck --if-present || true

      - name: Run tests in generated project
        run: |
          RENDERED=$(find /tmp -maxdepth 2 -type d -name "*" -print | head -n 1)
          cd "$RENDERED" || exit 1
          pnpm test --if-present || true
