"""
{{ project_name }} Prompt Optimizer Test Suite

Comprehensive test suite following TDD principles with unit tests,
integration tests, and end-to-end tests for all layers.

Generated with VibePro prompt-optimizer template v{{ template_version }}
"""

# Test configuration
import pytest
import asyncio
from pathlib import Path
import tempfile
import shutil

pytest_plugins = ["pytest_asyncio"]


@pytest.fixture(scope="session")
def event_loop():
    """Create an instance of the default event loop for the test session."""
    loop = asyncio.new_event_loop()
    yield loop
    loop.close()


@pytest.fixture
def temp_db_path():
    """Create a temporary database path for testing."""
    temp_dir = tempfile.mkdtemp()
    db_path = Path(temp_dir) / "test_db"
    yield str(db_path)
    shutil.rmtree(temp_dir, ignore_errors=True)


@pytest.fixture
def sample_prompt_content():
    """Sample prompt content for testing."""
    return """
    You are an AI assistant helping users with software development tasks.
    Please analyze the given code and provide suggestions for improvement.
    Focus on code quality, performance, and maintainability.
    Provide specific, actionable recommendations.
    """


@pytest.fixture
def sample_long_prompt():
    """Sample long prompt for testing token limits."""
    base_text = "This is a sample prompt that will be repeated many times. "
    return base_text * 100  # Create a long prompt


@pytest.fixture
def sample_optimization_suggestions():
    """Sample optimization suggestions for testing."""
    return [
        "Use more specific language in the instructions",
        "Remove redundant phrases",
        "Add clear output format requirements",
        "Include examples for better clarity"
    ]
